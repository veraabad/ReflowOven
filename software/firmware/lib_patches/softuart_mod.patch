diff --git a/main.c b/main.c
deleted file mode 100644
index 7c5804e..0000000
--- a/main.c
+++ /dev/null
@@ -1,117 +0,0 @@
-/* 
-	AVR Software-Uart Demo-Application 
-	Version 0.4, 10/2010
-	
-	by Martin Thomas, Kaiserslautern, Germany
-	<eversmith@heizung-thomas.de>
-	http://www.siwawi.arubi.uni-kl.de/avr_projects
-*/
-
-/* 
-Test environment/settings: 
-- avr-gcc 4.3.3/avr-libc 1.6.7 (WinAVR 3/2010)
-- Atmel ATmega324P @ 8MHz internal RC, ATtiny85 @ 1MHz internal RC
-- 2400bps
-*/
-
-/*
-AVR Memory Usage (-Os, no-inline small-functions, relax)
-----------------
-Device: atmega324p
-
-Program:     926 bytes (2.8% Full)
-(.text + .data + .bootloader)
-
-Data:         52 bytes (2.5% Full)
-(.data + .bss + .noinit)
-
-
-AVR Memory Usage (-Os)
-----------------
-Device: attiny85
-
-Program:     828 bytes (10.1% Full)
-(.text + .data + .bootloader)
-
-Data:         52 bytes (10.2% Full)
-(.data + .bss + .noinit)
-
-*/
-
-#define WITH_STDIO_DEMO   0 /* 1: enable, 0: disable */
-
-#include <avr/interrupt.h>
-#include <avr/pgmspace.h>
-#include "softuart.h"
-
-
-#if WITH_STDIO_DEMO
-#include <stdio.h>
-
-// interface between avr-libc stdio and software-UART
-static int my_stdio_putchar( char c, FILE *stream )
-{
-	if ( c == '\n' ) {
-		softuart_putchar( '\r' );
-	}
-	softuart_putchar( c );
-
-	return 0;
-}
-
-FILE suart_stream = FDEV_SETUP_STREAM( my_stdio_putchar, NULL, _FDEV_SETUP_WRITE );
-
-static void stdio_demo_func( void ) 
-{
-	stdout = &suart_stream;
-	printf( "This output done with printf\n" );
-	printf_P( PSTR("This output done with printf_P\n") );
-}
-#endif /* WITH_STDIO_DEMO */
-
-
-int main(void)
-{
-	char c;
-	static const char pstring[] PROGMEM = 
-		"adapted for Atmel AVR and this demo by Martin Thomas\r\n";
-	unsigned short cnt = 0;
-#if (F_CPU > 4000000UL)
-#define CNTHALLO (unsigned int)(0xFFFF)
-#else 
-#define CNTHALLO (unsigned int)(0xFFFF/3)
-#endif
-
-	softuart_init();
-	softuart_turn_rx_on(); /* redundant - on by default */
-	
-	sei();
-
-	softuart_puts_P( "\r\nSoftuart Demo-Application\r\n" );    // "implicit" PSTR
-	softuart_puts_p( PSTR("generic softuart driver code by Colin Gittins\r\n") ); // explicit PSTR
-	softuart_puts_p( pstring ); // pstring defined with PROGMEM
-	softuart_puts( "--\r\n" );  // string "from RAM"
-
-#if WITH_STDIO_DEMO
-	stdio_demo_func();
-#endif
-	
-	for (;;) {
-	
-		if ( softuart_kbhit() ) {
-			c = softuart_getchar();
-			softuart_putchar( '[' );
-			softuart_putchar( c );
-			softuart_putchar( ']' );
-		}
-
-		cnt++;
-		if (cnt == CNTHALLO) {
-			cnt = 0;
-			softuart_puts_P( " Hello " );
-		}
-		
-	}
-	
-	return 0; /* never reached */
-}
diff --git a/softuart.h b/softuart.h
index 4c93929..b873ee2 100644
--- a/softuart.h
+++ b/softuart.h
@@ -3,7 +3,8 @@
     #define F_CPU 3686400UL
 #endif
 
-#define SOFTUART_BAUD_RATE      2400
+#define SOFTUART_BAUD_RATE      9600
+#include <avr/pgmspace.h>
 
 #if defined (__AVR_ATtiny25__) || defined (__AVR_ATtiny45__) || defined (__AVR_ATtiny85__)
     #define SOFTUART_RXPIN   PINB
@@ -26,7 +27,7 @@
     #define SOFTUART_CTC_MASKA         (1 << WGM01)
     #define SOFTUART_CTC_MASKB         (0)
 
-    /* "A timer interrupt must be set to interrupt at three times 
+    /* "A timer interrupt must be set to interrupt at three times
        the required baud rate." */
     #define SOFTUART_PRESCALE (8)
     // #define SOFTUART_PRESCALE (1)
@@ -37,9 +38,47 @@
     #elif (SOFTUART_PRESCALE==1)
         #define SOFTUART_PRESC_MASKA         (0)
         #define SOFTUART_PRESC_MASKB         (1 << CS00)
-    #else 
+    #else
         #error "prescale unsupported"
     #endif
+
+#elif defined (__AVR_ATtiny24__) || defined (__AVR_ATtiny44__) || defined (__AVR_ATtiny84__)
+    // I'm using Port A in my design, but Port B could be used just as easily
+    #define SOFTUART_RXPIN   PINA
+    #define SOFTUART_RXDDR   DDRA
+    #define SOFTUART_RXBIT   PA2    // Change this to what you like
+
+    #define SOFTUART_TXPORT  PORTA
+    #define SOFTUART_TXDDR   DDRA
+    #define SOFTUART_TXBIT   PA3    // Change this to what you like
+
+    #define SOFTUART_T_COMP_LABEL      TIM0_COMPA_vect
+    #define SOFTUART_T_COMP_REG        OCR0A
+    #define SOFTUART_T_CONTR_REGA      TCCR0A
+    #define SOFTUART_T_CONTR_REGB      TCCR0B
+    #define SOFTUART_T_CNT_REG         TCNT0
+    #define SOFTUART_T_INTCTL_REG      TIMSK0
+
+    #define SOFTUART_CMPINT_EN_MASK    (1 << OCIE0A)
+
+    #define SOFTUART_CTC_MASKA         (1 << WGM01)
+    #define SOFTUART_CTC_MASKB         (0)
+
+    /* "A timer interrupt must be set to interrupt at three times
+     the required baud rate." */
+    #define SOFTUART_PRESCALE (8)
+    // #define SOFTUART_PRESCALE (1)
+
+    #if (SOFTUART_PRESCALE == 8)
+    #define SOFTUART_PRESC_MASKA         (0)
+    #define SOFTUART_PRESC_MASKB         (1 << CS01)
+    #elif (SOFTUART_PRESCALE==1)
+    #define SOFTUART_PRESC_MASKA         (0)
+    #define SOFTUART_PRESC_MASKB         (1 << CS00)
+    #else
+    #error "prescale unsupported"
+    #endif
+
 #elif defined (__AVR_ATmega324P__) || defined (__AVR_ATmega324A__)  \
    || defined (__AVR_ATmega644P__) || defined (__AVR_ATmega644PA__) \
    || defined (__AVR_ATmega328P__) || defined (__AVR_ATmega328PA__) \
@@ -63,7 +102,7 @@
     #define SOFTUART_CTC_MASKA         (1 << WGM01)
     #define SOFTUART_CTC_MASKB         (0)
 
-    /* "A timer interrupt must be set to interrupt at three times 
+    /* "A timer interrupt must be set to interrupt at three times
        the required baud rate." */
     #define SOFTUART_PRESCALE (8)
     // #define SOFTUART_PRESCALE (1)
@@ -74,7 +113,7 @@
     #elif (SOFTUART_PRESCALE==1)
         #define SOFTUART_PRESC_MASKA         (0)
         #define SOFTUART_PRESC_MASKB         (1 << CS00)
-    #else 
+    #else
         #error "prescale unsupported"
     #endif
 #else
@@ -116,7 +155,7 @@ void softuart_turn_rx_off( void );
 // Write a NULL-terminated string from RAM to the serial port
 void softuart_puts( const char *s );
 
-// Write a NULL-terminated string from program-space (flash) 
+// Write a NULL-terminated string from program-space (flash)
 // to the serial port. example: softuart_puts_p(PSTR("test"))
 void softuart_puts_p( const char *prg_s );
 
